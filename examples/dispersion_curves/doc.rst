Dispersion relation
========================

This example illustrated how to calculate dispersion curves for a given sample. 
The simulated system is a so-called "width-modulated nanostrip waveguide" [Lee2009]_, 
as shown, 

.. image:: ../examples/dispersion_curves/bar.png
    :scale: 100
    :align: center 
    
The dimensions of the nanostrip is :math:`1080\times 30 \times 2 \mathrm{nm}^3` 
and the material parmeters are selected for typical Permalloy. 
The geometry file is given by (netgen script)

.. literalinclude:: ../examples/dispersion_curves/width-modulated_bar.geo


Basically, the dispersion curves can be obtained by two steps, the first step 
is relax the system till the magnetisation reaches a equilibrium state, the following 
step is excite the system through a sinc pulse and collect the time and spatial 
information of magnetisation evolution, the dispersion curves can be computed by the Fourier 
transformation of these data. The methods are described in detail in the literature
[Kumar2012]_, [Venkat2012]_.


The first function used here is relax_system(geo_file),

.. literalinclude:: ../examples/dispersion_curves/dispersion.py
    :lines: 14-27

where is the implementation of the first step described above. A numpy array 
file 'relaxed.npy' is stored after running the relax_system function. After loading
the equilibrium magnetisation state into the function excite_system(geo_file), 
a sinc-shaped pulse is applied to the sample, 

.. math::
	
	h(x,t)=h_0 \frac{\sin (k_c x)}{k_c x} \frac{\sin (2\pi f (t-t_0))}{2\pi f (t-t_0)}

The time- and spatial-varying field is implemented by `TimeZeeman`, 
    
.. literalinclude:: ../examples/dispersion_curves/dispersion.py
    :lines: 49-67

The :math:`\alpha` value at the two sides of nanostrip (x<-530nm or x>530nm) are set to 1.0
to absorb the reflection of the spin wave, 

.. literalinclude:: ../examples/dispersion_curves/dispersion.py
    :lines: 45-47

Therefore, in the compute_dispersion function only the FFT is performed (without 
applying extra window function), and the whole codes are list here,

.. literalinclude:: ../examples/dispersion_curves/dispersion.py

The corresponding dispersion curves are plotted in the following figure,

.. image:: ../examples/dispersion_curves/dispersion.png
    :scale: 100
    :align: center 

The figure is generated by Gnuplot with script `plot.gnu`:

.. literalinclude:: ../examples/dispersion_curves/plot.gnu




.. [Lee2009] Phys. Rev. Lett. 102, 127202 (2009) DOI: 10.1103/PhysRevLett.102.127202
.. [Kumar2012] J. Phys. D: Appl. Phys. 45, 015001 (2012)  DOI: dx.doi.org/10.1088/0022-3727/45/1/015001
.. [Venkat2012] Magnetics, IEEE Transactions on (2012) DOI: dx.doi.org/10.1109/TMAG.2012.2206820