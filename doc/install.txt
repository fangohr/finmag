Finmag may be installed on a fresh installation of Ubuntu 12.04 as follows. The procedure for other Linux distributions will be similar, but the supplied scripts call the Debian/Ubuntu package managers ``aptitude`` and ``apt-get``, so some modification may be necessary on other distributions.

1. At a shell prompt, navigate to the directory in which you would like the ``finmag`` tree located. If you bitbucket name is ``nsob104`` then clone the repository with
2. ``hg clone https://nsob104@bitbucket.org/fangohr/finmag``
3. ``cd finmag/install/on-fresh-ubuntu-11.10``
4. Run ``sudo sh do-all.sh``.  At the time of writing, this script requires some interaction.  It invokes ``aptitude`` and ``apt-get`` through ``sudo`` several times, so you may need to be ready to provide the administrative password.  Moreover, some of the package management operations will ask for confirmation before installing packages and before adding the FEniCS PPA to the ``/etc/apt/sources.list.d/`` directory.

At this point, Finmag should be installed (should any of the above scripts have failed, check your Internet connectivity before re-trying the script).  However, in order for the included tests to run, it is necessary to install some additional software, namely OOMMF, magpar and Nmag.  By default, subdirectories under ``$HOME`` are made for each piece of additional software installed; this location may be edited in the individual scripts named below.

5. ``cd ..`` to navigate to the ``finmag/install`` directory.
6. Run ``sh oommf.sh`` and when required, provide the administrative password (this script installs OOMMF, and then places a simple OOMMF launch-script in ``/usr/local/bin/``).
7. The script will print information about setting two environment variables, which you should act upon.  Note that you cannot copy and paste the output from the script directly into a Bash shell startup file due to the spaces around the ``=`` signs.  Remove these spaces and add to your shell's startup file.  For example, for Bash

  .. code-block:: bash

    cat >> ~/.profile << EOF
    OOMMF_TCL_INCLUDE_DIR=/usr/include/tcl8.5/
    OOMMF_TK_INCLUDE_DIR=/usr/include/tcl8.5/
    EOF

8. Run ``sh magpar.sh``
9. Run ``sh nmag.sh`` (this script will require an administrative password as it installs prerequisites via a ``sudo apt-get`` command).
10. Add the directories for ``nmag`` and ``magpar`` to your PATH, and add Finmag to your PYTHONPATH (replacing ``...`` by the parent directory that you chose for your Finmag installation):

  .. code-block:: bash

    cat >> ~/.profile << EOF
    export PATH="$HOME/nmag-0.2.1/nsim/bin:$HOME/magpar-0.9/src/:$PATH"
    export PYTHONPATH=".../finmag/src/"
    EOF

Now, ensure that the environment variables are as set in ``~/.profile`` and then run the test suite to verify the Finmag installation:

11. ``. ~/.profile``
12. ``cd ../src && py.test -v``

Expected output will include many lines of tests, each of which should have the status ``PASSED``, and end with some statistics, for example::

 ================== 131 passed in 108.40 seconds ===================


Installation of FEniCS from source
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

If the binaries do not apply to you, you want to install directly from source or you want the newest development version, you should try Dorsal. Dorsal is a shell script that automates the process of fetching, compiling, and installing the various FEniCS sub-projects.

In order to install FEniCS using Dorsal, simply follow these steps:

1. Download Dorsal from launchpad using Bazaar:

  .. code-block:: bash

    bzr branch lp:dorsal

2. Navigate into the downloaded dorsal directory and tweak dorsal.cfg to your liking. At the last line, stable_build=true indicates that you want to build the latest stable version of all packages. If you change this to false, you will get the most recent commits to the development versions of all FEniCS packages.

3. If you have some special installation demands, tweak your platform file in FEniCS/platforms/supported/your.platform (where your is the name of your OS version) to your liking. Be aware that your platform file may be in FEniCS/platforms/deprecated/ or FEniCS/platforms/contributed/ if your are not on one of the most recent releases.

4. Invoke Dorsal by running:

  .. code-block:: bash

    ./dorsal.sh

5. At this point, Dorsal attempts to guess your operating system (platform) and provides a list of instructions to ensure that your system is ready for installing FEniCS. Go through these instructions carefully, and copy and paste appropriate commands into a separate terminal window to prepare your system.

6. Once you have completed these steps, hit enter to begin the installation!

7. Update your PATH and PYTHONPATH variables to include the FEniCS installation, and source the dolfin.conf file as instructed by Dorsal.

8. Follow the instructions on installation of Finmag in the previous section, but exclude all FEniCS installation.

9. Open /finmag/native/Makefile and edit the following:

  a) Change the occurances of "-ldolfin" to <path/to/your/libdolfin.so>. This should normally be {FEniCS_DIR}/lib/libdolfin.so.
  b) Add the compile flag -I{FEniCS_DIR}/include to CFLAGS_INCLUDE
